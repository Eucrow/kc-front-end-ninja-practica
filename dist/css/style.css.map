{"version":3,"sources":["_reset.scss","_borderbox.scss","_html-tags.scss","_social.scss","_sprite.scss"],"names":[],"mappings":"AACA,sBACE,UAAa,AACb,aAAiB,CAClB,ACJD,EAKE,qBAAuB,CACxB,ACND,GACI,SAAU,CACb,ACDD,OACI,oBAAsB,CACzB,AAED,aCyFE,wCAAuB,AALvB,4BAvDiC,AA6CjC,WA7CuC,AAiDvC,WAjD6C,CD3B9C","file":"style.css","sourcesContent":["/*RESET*/\r\nheader, body, footer, ul {\r\n  padding: 0px;\r\n  margin: 0px auto;\r\n}\r\n","* {\r\n  /*bxz*/\r\n  /*el tamaño de la caja incluye margin y border*/\r\n  -webkit-box-sizing: border-box;\r\n  -moz-box-sizing: border-box;\r\n  box-sizing: border-box;\r\n}\r\n","h1{\r\n    color:red;\r\n}\r\n","//esto no debería ir aqúi:\r\n.likes{\r\n    display: inline-block;\r\n}\r\n\r\n.icon-hearth {\r\n  @include sprite($icon-heart);\r\n}\r\n","/*\nSCSS variables are information about icon's compiled state, stored under its original file name\n\n.icon-home {\n  width: $icon-home-width;\n}\n\nThe large array-like variables contain all information about a single icon\n$icon-home: x y offset_x offset_y width height total_width total_height image_path;\n\nAt the bottom of this section, we provide information about the spritesheet itself\n$spritesheet: width height image $spritesheet-sprites;\n*/\n$icon-heart-red-name: 'icon-heart-red';\n$icon-heart-red-x: 0px;\n$icon-heart-red-y: 0px;\n$icon-heart-red-offset-x: 0px;\n$icon-heart-red-offset-y: 0px;\n$icon-heart-red-width: 20px;\n$icon-heart-red-height: 20px;\n$icon-heart-red-total-width: 40px;\n$icon-heart-red-total-height: 40px;\n$icon-heart-red-image: '../img/sprite.png';\n$icon-heart-red: (0px, 0px, 0px, 0px, 20px, 20px, 40px, 40px, '../img/sprite.png', 'icon-heart-red', );\n$icon-heart-name: 'icon-heart';\n$icon-heart-x: 20px;\n$icon-heart-y: 0px;\n$icon-heart-offset-x: -20px;\n$icon-heart-offset-y: 0px;\n$icon-heart-width: 20px;\n$icon-heart-height: 20px;\n$icon-heart-total-width: 40px;\n$icon-heart-total-height: 40px;\n$icon-heart-image: '../img/sprite.png';\n$icon-heart: (20px, 0px, -20px, 0px, 20px, 20px, 40px, 40px, '../img/sprite.png', 'icon-heart', );\n$icon-up-name: 'icon-up';\n$icon-up-x: 0px;\n$icon-up-y: 20px;\n$icon-up-offset-x: 0px;\n$icon-up-offset-y: -20px;\n$icon-up-width: 20px;\n$icon-up-height: 20px;\n$icon-up-total-width: 40px;\n$icon-up-total-height: 40px;\n$icon-up-image: '../img/sprite.png';\n$icon-up: (0px, 20px, 0px, -20px, 20px, 20px, 40px, 40px, '../img/sprite.png', 'icon-up', );\n$spritesheet-width: 40px;\n$spritesheet-height: 40px;\n$spritesheet-image: '../img/sprite.png';\n$spritesheet-sprites: ($icon-heart-red, $icon-heart, $icon-up, );\n$spritesheet: (40px, 40px, '../img/sprite.png', $spritesheet-sprites, );\n\n/*\nThe provided mixins are intended to be used with the array-like variables\n\n.icon-home {\n  @include sprite-width($icon-home);\n}\n\n.icon-email {\n  @include sprite($icon-email);\n}\n\nExample usage in HTML:\n\n`display: block` sprite:\n<div class=\"icon-home\"></div>\n\nTo change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:\n\n// CSS\n.icon {\n  display: inline-block;\n}\n\n// HTML\n<i class=\"icon icon-home\"></i>\n*/\n@mixin sprite-width($sprite) {\n  width: nth($sprite, 5);\n}\n\n@mixin sprite-height($sprite) {\n  height: nth($sprite, 6);\n}\n\n@mixin sprite-position($sprite) {\n  $sprite-offset-x: nth($sprite, 3);\n  $sprite-offset-y: nth($sprite, 4);\n  background-position: $sprite-offset-x  $sprite-offset-y;\n}\n\n@mixin sprite-image($sprite) {\n  $sprite-image: nth($sprite, 9);\n  background-image: url(#{$sprite-image});\n}\n\n@mixin sprite($sprite) {\n  @include sprite-image($sprite);\n  @include sprite-position($sprite);\n  @include sprite-width($sprite);\n  @include sprite-height($sprite);\n}\n\n/*\nThe `sprites` mixin generates identical output to the CSS template\n  but can be overridden inside of SCSS\n\n@include sprites($spritesheet-sprites);\n*/\n@mixin sprites($sprites) {\n  @each $sprite in $sprites {\n    $sprite-name: nth($sprite, 10);\n    .#{$sprite-name} {\n      @include sprite($sprite);\n    }\n  }\n}\n"],"sourceRoot":"/source/"}