{"version":3,"sources":["style.css","_reset.scss","_borderbox.scss","_sprite.scss","_html-tags.scss","_variables.scss","_social.scss"],"names":[],"mappings":"AAAA,iBAAiB;ACAjB,SAAS;AACT;EACE,aAAa;EACb,iBAAiB,EAClB;;ACJD;EACE,OAAO;EACP,gDAAA;EAGA,uBAAuB,EACxB;;ACND;;;;;;;;;;;;EAYE;AAwCF;;;;;;;;;;;;;;;;;;;;;;;;;EAyBE;AA2BF;;;;;EAKE;AC7GF;EACI,gBCO0B,EDN7B;;AACD;EACI,gBCK0B,EDJ7B;;AACD;EACI,gBCG0B,EDF7B;;AACD;EACI,gBCC0B,EDA7B;;AACD;EACI,gBCD0B,EDE7B;;AACD;EACI,gBCXiB,EDYpB;;AAID;EACI,0BCDgB,EDSnB;EATD;IAGQ,eCLa,EDMhB;EAJL;IAMQ,iCCzBkC;ID0BlC,gBCjBsB,EDkBzB;;AE5BL;EACI,sBAAsB,EACzB;;AAED;EHyFE,yCAAuB;EALvB,+BAvDiC;EA6CjC,YA7CuC;EAiDvC,aAjD6C,EG3B9C","file":"style.css","sourcesContent":["@charset \"UTF-8\";\n/*RESET*/\nheader, body, footer, ul {\n  padding: 0px;\n  margin: 0px auto; }\n\n* {\n  /*bxz*/\n  /*el tamaño de la caja incluye margin y border*/\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  box-sizing: border-box; }\n\n/*\nSCSS variables are information about icon's compiled state, stored under its original file name\n\n.icon-home {\n  width: $icon-home-width;\n}\n\nThe large array-like variables contain all information about a single icon\n$icon-home: x y offset_x offset_y width height total_width total_height image_path;\n\nAt the bottom of this section, we provide information about the spritesheet itself\n$spritesheet: width height image $spritesheet-sprites;\n*/\n/*\nThe provided mixins are intended to be used with the array-like variables\n\n.icon-home {\n  @include sprite-width($icon-home);\n}\n\n.icon-email {\n  @include sprite($icon-email);\n}\n\nExample usage in HTML:\n\n`display: block` sprite:\n<div class=\"icon-home\"></div>\n\nTo change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:\n\n// CSS\n.icon {\n  display: inline-block;\n}\n\n// HTML\n<i class=\"icon icon-home\"></i>\n*/\n/*\nThe `sprites` mixin generates identical output to the CSS template\n  but can be overridden inside of SCSS\n\n@include sprites($spritesheet-sprites);\n*/\nh1 {\n  font-size: 29px; }\n\nh2 {\n  font-size: 26px; }\n\nh3 {\n  font-size: 23px; }\n\nh4 {\n  font-size: 20px; }\n\nh5 {\n  font-size: 17px; }\n\nh6 {\n  font-size: 14px; }\n\nheader {\n  background-color: #7EBFD9; }\n  header h1 {\n    color: #4F5902; }\n  header .subtitle {\n    font-family: \"Aref Ruqaa\", serif;\n    font-size: 20px; }\n\n.likes {\n  display: inline-block; }\n\n.icon-hearth {\n  background-image: url(../img/sprite.png);\n  background-position: -20px 0px;\n  width: 20px;\n  height: 20px; }\n","/*RESET*/\r\nheader, body, footer, ul {\r\n  padding: 0px;\r\n  margin: 0px auto;\r\n}\r\n","* {\r\n  /*bxz*/\r\n  /*el tamaño de la caja incluye margin y border*/\r\n  -webkit-box-sizing: border-box;\r\n  -moz-box-sizing: border-box;\r\n  box-sizing: border-box;\r\n}\r\n","/*\nSCSS variables are information about icon's compiled state, stored under its original file name\n\n.icon-home {\n  width: $icon-home-width;\n}\n\nThe large array-like variables contain all information about a single icon\n$icon-home: x y offset_x offset_y width height total_width total_height image_path;\n\nAt the bottom of this section, we provide information about the spritesheet itself\n$spritesheet: width height image $spritesheet-sprites;\n*/\n$icon-heart-red-name: 'icon-heart-red';\n$icon-heart-red-x: 0px;\n$icon-heart-red-y: 0px;\n$icon-heart-red-offset-x: 0px;\n$icon-heart-red-offset-y: 0px;\n$icon-heart-red-width: 20px;\n$icon-heart-red-height: 20px;\n$icon-heart-red-total-width: 40px;\n$icon-heart-red-total-height: 40px;\n$icon-heart-red-image: '../img/sprite.png';\n$icon-heart-red: (0px, 0px, 0px, 0px, 20px, 20px, 40px, 40px, '../img/sprite.png', 'icon-heart-red', );\n$icon-heart-name: 'icon-heart';\n$icon-heart-x: 20px;\n$icon-heart-y: 0px;\n$icon-heart-offset-x: -20px;\n$icon-heart-offset-y: 0px;\n$icon-heart-width: 20px;\n$icon-heart-height: 20px;\n$icon-heart-total-width: 40px;\n$icon-heart-total-height: 40px;\n$icon-heart-image: '../img/sprite.png';\n$icon-heart: (20px, 0px, -20px, 0px, 20px, 20px, 40px, 40px, '../img/sprite.png', 'icon-heart', );\n$icon-up-name: 'icon-up';\n$icon-up-x: 0px;\n$icon-up-y: 20px;\n$icon-up-offset-x: 0px;\n$icon-up-offset-y: -20px;\n$icon-up-width: 20px;\n$icon-up-height: 20px;\n$icon-up-total-width: 40px;\n$icon-up-total-height: 40px;\n$icon-up-image: '../img/sprite.png';\n$icon-up: (0px, 20px, 0px, -20px, 20px, 20px, 40px, 40px, '../img/sprite.png', 'icon-up', );\n$spritesheet-width: 40px;\n$spritesheet-height: 40px;\n$spritesheet-image: '../img/sprite.png';\n$spritesheet-sprites: ($icon-heart-red, $icon-heart, $icon-up, );\n$spritesheet: (40px, 40px, '../img/sprite.png', $spritesheet-sprites, );\n\n/*\nThe provided mixins are intended to be used with the array-like variables\n\n.icon-home {\n  @include sprite-width($icon-home);\n}\n\n.icon-email {\n  @include sprite($icon-email);\n}\n\nExample usage in HTML:\n\n`display: block` sprite:\n<div class=\"icon-home\"></div>\n\nTo change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:\n\n// CSS\n.icon {\n  display: inline-block;\n}\n\n// HTML\n<i class=\"icon icon-home\"></i>\n*/\n@mixin sprite-width($sprite) {\n  width: nth($sprite, 5);\n}\n\n@mixin sprite-height($sprite) {\n  height: nth($sprite, 6);\n}\n\n@mixin sprite-position($sprite) {\n  $sprite-offset-x: nth($sprite, 3);\n  $sprite-offset-y: nth($sprite, 4);\n  background-position: $sprite-offset-x  $sprite-offset-y;\n}\n\n@mixin sprite-image($sprite) {\n  $sprite-image: nth($sprite, 9);\n  background-image: url(#{$sprite-image});\n}\n\n@mixin sprite($sprite) {\n  @include sprite-image($sprite);\n  @include sprite-position($sprite);\n  @include sprite-width($sprite);\n  @include sprite-height($sprite);\n}\n\n/*\nThe `sprites` mixin generates identical output to the CSS template\n  but can be overridden inside of SCSS\n\n@include sprites($spritesheet-sprites);\n*/\n@mixin sprites($sprites) {\n  @each $sprite in $sprites {\n    $sprite-name: nth($sprite, 10);\n    .#{$sprite-name} {\n      @include sprite($sprite);\n    }\n  }\n}\n","h1{\r\n    font-size: $font-size-h1;\r\n}\r\nh2{\r\n    font-size: $font-size-h2;\r\n}\r\nh3{\r\n    font-size: $font-size-h3;\r\n}\r\nh4{\r\n    font-size: $font-size-h4;\r\n}\r\nh5{\r\n    font-size: $font-size-h5;\r\n}\r\nh6{\r\n    font-size: $font-size-h6;\r\n}\r\n\r\n\r\n\r\nheader{\r\n    background-color: $color-blue;\r\n    h1{\r\n        color: $color-green;\r\n    }\r\n    .subtitle{\r\n        font-family: $subtitle-font-family;\r\n        font-size: $font-size-h4;\r\n    }\r\n}\r\n","//Font families\r\n$main-font-family: \"Prompt\", sans-serif;\r\n$subtitle-font-family: 'Aref Ruqaa', serif;\r\n\r\n//Font sizes:\r\n$font-size-base: 14px;\r\n$font-size-small: $font-size-base - 3px;\r\n$font-size-large: $font-size-base + 6px;\r\n$font-size-h1: $font-size-base +15px;\r\n$font-size-h2: $font-size-base +12px;\r\n$font-size-h3: $font-size-base +9px;\r\n$font-size-h4: $font-size-base +6px;\r\n$font-size-h5: $font-size-base +3px;\r\n$font-size-h6: $font-size-base;\r\n\r\n//Base Colors:\r\n$color-white: #FFFFFF;\r\n$color-black: #000000;\r\n$color-ligth-green: #898C27;\r\n$color-green: #4F5902;\r\n$color-dark-green: #1E2601;\r\n$color-blue: #7EBFD9;\r\n$color-dark-blue: #010A26;\r\n\r\n// Responsive variables\r\n//$tablet-width: 737px;\r\n//$phone-width: $tablet-width - 1px;\r\n","//esto no debería ir aqúi:\r\n.likes{\r\n    display: inline-block;\r\n}\r\n\r\n.icon-hearth {\r\n  @include sprite($icon-heart);\r\n}\r\n"],"sourceRoot":"/source/"}